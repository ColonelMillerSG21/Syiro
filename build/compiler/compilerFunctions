#!/bin/bash

fileChanged(){ # Function that checks if a file is new or has been changed
	sourceLocation=$1
	fileFullPath=$2

	mkdir -p build/sha1sums/"$sourceLocation" # Make the type specific sha1sums folder if it doesn't exist already

	file=${fileFullPath#*/} # Set file to be the name of the file without the path
	fileShaSumPath="build/sha1sums/$sourceLocation/$file" # Set the full patch of the potential sha1sum of the file

	latestFileSum=$(cat "src/$sourceLocation/$fileFullPath" | sha1sum) # Get the sha1sum of the file
	latestFileSum=${latestFileSum% -} # Remove everything after  -, which is sha1sum's reference to the file that was hashed
	latestFileSum=${latestFileSum:0:-1} # Remove the whitespace from the ending of the sha1sum

	FILE_CHANGED=""

	if [ -f "$fileShaSumPath" ]; then # If the sha1sum file of file exists
		currentRecordedSumOfFile=$(cat "$fileShaSumPath") # Get the sha1sum of the file stored

		if [ "$latestFileSum" != "$currentRecordedSumOfFile" ]; then # If the sums don't match (file diff)
			FILE_CHANGED="CHANGED"
		else
			FILE_CHANGED="NOT_CHANGED"
		fi
	else # If the sha1sum of the file does not exist
		FILE_CHANGED="CHANGED" # Assume the file has been changed, since there is no sum and it could be a new file
	fi

	if [ $FILE_CHANGED == "CHANGED" ]; then # If the file has been changed or is new, create an sha1sum of the file
		echo "$latestFileSum" > "$fileShaSumPath" # Write the contents
	fi

	return
}

createSnapshot(){ # Create a snapshot of the branch and package it
	snapshotType=$1 # Type of the snapshot, whether it be devel or stable
	rocketVersion=$2 # Rocket version

	echo "Building Rocket snapshot as $snapshotType and v $rocketVersion"

	mkdir -p "build/active-snapshot/Rocket" # Create a temporary snapshot directory
	echo "$rocketVersion" > VERSION.txt # Update the VERSION.txt file

	cp -r build/rocket.css build/rocket.min.js build/rocket.min.js.gz ./build/active-snapshot/Rocket # Copy over particular build content to the snapshot
	cp -r src/less/fonts README.md License.txt VERSION.txt ./build/active-snapshot/Rocket # Copy over particular non-build data to the snapshot

	tar --create --gzip --recursion --directory=build/active-snapshot -f "$snapshotType".tar.gz Rocket
	rm -rf build/active-snapshot

	echo "Build finished."
}
