#!/bin/bash

currentDirectory=$(pwd) # Get the current directory
currentDirectory=${currentDirectory%builders} #Remove the builders folder, if it exists, from the directory
projectName=${currentDirectory##*/} # Get the "project" name
source "$currentDirectory/builders/tsFunctions" # Import Functions Dependency

cd "$currentDirectory/src/typescript" # Go to the current directory and then the src/typescript folder

rocketCodebaseChanged=false # Set rocketCodebaseChanged to false by default. If a module has been added or changed, then it will be changed to true

allTSFiles=$(find -name "*.ts") # Get all Typescript files recursively

for file in $allTSFiles; do
	if [[ "$file" != *.d.ts ]]; then # If it is not a declaration file (exists after using tsCompile once)
		fileNameWithoutPathRemnant="${file#./}" # Remove the ./ from the directory

		echo "------$fileNameWithoutPathRemnant-----"
		echo "Checking if this file is new or has been changed."

		fileChanged "$currentDirectory" "$fileNameWithoutPathRemnant"

		if [ "$FILE_CHANGED" == "CHANGED" ]; then # If the file has been changed
			rocketCodebaseChanged=true # Change to true
			echo "File is new or has been changed. Ensuring Rocket is marked for compiling."
		else
			echo "File is not new or has not been changed."
		fi

		printf "\n" # Put a break between each file segment to make output more readable.
	fi
done

if [ $rocketCodebaseChanged == true ]; then # If the Rocket codebase has been changed
    tsc --removeComments --target 'ES5' rocket.ts --declaration --out rocket.js
    echo "Minifying Metis compiled Javascript."
    yuicompressor --type=js rocket.js -o rocket.min.js &> /dev/null
    echo "Finished compiling and minification process of Metis."
fi

if [ -f "$currentDirectory/builders/tsHook" ]; then # If tsHook exists, we will execute the file (it acts as a post-compile hook)
	source "$currentDirectory/builders/tsHook"
	hook
fi
